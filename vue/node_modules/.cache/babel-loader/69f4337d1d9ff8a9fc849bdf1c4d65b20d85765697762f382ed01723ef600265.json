{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"FrontLayout\",\n  data() {\n    return {\n      top: '',\n      notice: [],\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      showAIDialog: false,\n      question: '',\n      chatHistory: [],\n      loading: false\n    };\n  },\n  mounted() {\n    this.loadNotice();\n  },\n  methods: {\n    // ... 保持原有的其他方法不变 ...\n\n    askAI() {\n      if (this.question.trim() === '') {\n        this.$message.warning('请输入问题');\n        return;\n      }\n\n      // 添加用户问题到聊天记录\n      this.chatHistory.push({\n        type: 'user',\n        content: this.question\n      });\n      this.loading = true;\n\n      // 发送请求\n      this.$request.post('/ai/ask', {\n        question: this.question\n      }).then(res => {\n        if (res.code === 200) {\n          // 添加AI回答到聊天记录\n          this.chatHistory.push({\n            type: 'ai',\n            content: res.answer\n          });\n        } else {\n          this.$message.error(res.msg || '请求失败');\n        }\n      }).catch(error => {\n        console.error('AI请求失败:', error);\n        this.$message.error('网络错误，请稍后再试');\n      }).finally(() => {\n        this.loading = false;\n        this.question = ''; // 清空输入框\n        this.$nextTick(() => {\n          // 滚动到底部\n          const container = this.$refs.chatContainer;\n          if (container) {\n            container.scrollTop = container.scrollHeight;\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","top","notice","user","JSON","parse","localStorage","getItem","showAIDialog","question","chatHistory","loading","mounted","loadNotice","methods","askAI","trim","$message","warning","push","type","content","$request","post","then","res","code","answer","error","msg","catch","console","finally","$nextTick","container","$refs","chatContainer","scrollTop","scrollHeight"],"sources":["src/views/Front.vue"],"sourcesContent":["<template>\n  <div>\n    \n\n    <!-- AI 客服按钮 -->\n    <el-button \n      type=\"primary\" \n      @click=\"showAIDialog = true\" \n      class=\"ai-service-btn\">\n      <i class=\"el-icon-service\"></i> AI 客服\n    </el-button>\n\n    <!-- AI 客服对话框 -->\n    <el-dialog \n      :visible.sync=\"showAIDialog\" \n      title=\"AI 智能客服\" \n      width=\"50%\"\n      :close-on-click-modal=\"false\">\n      <div class=\"ai-chat-container\">\n        <!-- 聊天记录区域 -->\n        <div class=\"chat-messages\" ref=\"chatContainer\">\n          <div v-if=\"chatHistory.length === 0\" class=\"welcome-message\">\n            您好！我是BuyCycle的AI客服助手，请问有什么可以帮您？\n          </div>\n          <div v-for=\"(msg, index) in chatHistory\" \n               :key=\"index\" \n               :class=\"['message', msg.type]\">\n            <div class=\"message-content\">{{ msg.content }}</div>\n          </div>\n        </div>\n        \n        <!-- 输入区域 -->\n        <div class=\"chat-input\">\n          <el-input\n            v-model=\"question\"\n            type=\"textarea\"\n            :rows=\"3\"\n            placeholder=\"请输入您的问题\"\n            @keyup.enter.native.exact=\"askAI\"\n          ></el-input>\n          <el-button \n            type=\"primary\" \n            @click=\"askAI\"\n            :loading=\"loading\"\n            style=\"margin-top: 10px\">\n            {{ loading ? '正在思考...' : '发送' }}\n          </el-button>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!--主体-->\n    <div class=\"main-body\">\n      <router-view ref=\"child\" @update:user=\"updateUser\" />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"FrontLayout\",\n\n  data() {\n    return {\n      top: '',\n      notice: [],\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      showAIDialog: false,\n      question: '',\n      chatHistory: [],\n      loading: false\n    }\n  },\n\n  mounted() {\n    this.loadNotice()\n  },\n\n  methods: {\n    // ... 保持原有的其他方法不变 ...\n\n    askAI() {\n      if (this.question.trim() === '') {\n        this.$message.warning('请输入问题');\n        return;\n      }\n\n      // 添加用户问题到聊天记录\n      this.chatHistory.push({\n        type: 'user',\n        content: this.question\n      });\n\n      this.loading = true;\n      \n      // 发送请求\n      this.$request.post('/ai/ask', {\n        question: this.question\n      }).then(res => {\n        if (res.code === 200) {\n          // 添加AI回答到聊天记录\n          this.chatHistory.push({\n            type: 'ai',\n            content: res.answer\n          });\n        } else {\n          this.$message.error(res.msg || '请求失败');\n        }\n      }).catch(error => {\n        console.error('AI请求失败:', error);\n        this.$message.error('网络错误，请稍后再试');\n      }).finally(() => {\n        this.loading = false;\n        this.question = ''; // 清空输入框\n        this.$nextTick(() => {\n          // 滚动到底部\n          const container = this.$refs.chatContainer;\n          if (container) {\n            container.scrollTop = container.scrollHeight;\n          }\n        });\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n@import \"@/assets/css/front.css\";\n\n/* AI客服相关样式 */\n.ai-service-btn {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  z-index: 999;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  font-size: 12px;\n}\n\n.ai-service-btn i {\n  font-size: 24px;\n  margin-bottom: 2px;\n}\n\n.ai-chat-container {\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  background: #f5f7fa;\n  border-radius: 4px;\n  margin-bottom: 20px;\n}\n\n.welcome-message {\n  text-align: center;\n  color: #909399;\n  padding: 20px;\n}\n\n.message {\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n}\n\n.message.user {\n  align-items: flex-end;\n}\n\n.message.ai {\n  align-items: flex-start;\n}\n\n.message-content {\n  max-width: 80%;\n  padding: 10px 15px;\n  border-radius: 4px;\n  word-break: break-word;\n}\n\n.user .message-content {\n  background: #409EFF;\n  color: white;\n  border-radius: 15px 15px 0 15px;\n}\n\n.ai .message-content {\n  background: white;\n  color: #333;\n  border-radius: 15px 15px 15px 0;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.chat-input {\n  padding: 10px 0;\n}\n</style>"],"mappings":";AA2DA;EACAA,IAAA;EAEAC,KAAA;IACA;MACAC,GAAA;MACAC,MAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,YAAA;MACAC,QAAA;MACAC,WAAA;MACAC,OAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,UAAA;EACA;EAEAC,OAAA;IACA;;IAEAC,MAAA;MACA,SAAAN,QAAA,CAAAO,IAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA;MACA;;MAEA;MACA,KAAAR,WAAA,CAAAS,IAAA;QACAC,IAAA;QACAC,OAAA,OAAAZ;MACA;MAEA,KAAAE,OAAA;;MAEA;MACA,KAAAW,QAAA,CAAAC,IAAA;QACAd,QAAA,OAAAA;MACA,GAAAe,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA;UACA,KAAAhB,WAAA,CAAAS,IAAA;YACAC,IAAA;YACAC,OAAA,EAAAI,GAAA,CAAAE;UACA;QACA;UACA,KAAAV,QAAA,CAAAW,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA,GAAAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,YAAAA,KAAA;QACA,KAAAX,QAAA,CAAAW,KAAA;MACA,GAAAI,OAAA;QACA,KAAArB,OAAA;QACA,KAAAF,QAAA;QACA,KAAAwB,SAAA;UACA;UACA,MAAAC,SAAA,QAAAC,KAAA,CAAAC,aAAA;UACA,IAAAF,SAAA;YACAA,SAAA,CAAAG,SAAA,GAAAH,SAAA,CAAAI,YAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}