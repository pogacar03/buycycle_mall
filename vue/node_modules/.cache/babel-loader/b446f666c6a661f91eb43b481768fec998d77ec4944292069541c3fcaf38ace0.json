{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nexport default {\n  name: 'ReturnApply',\n  data() {\n    return {\n      orderId: this.$route.query.orderId,\n      goods: {},\n      returnForm: {\n        type: \"1\",\n        reason: \"\",\n        description: \"\",\n        images: []\n      },\n      uploadUrl: '/api/upload',\n      headers: {\n        'Authorization': localStorage.getItem('token')\n      },\n      fileList: [],\n      loading: false,\n      submitting: false,\n      rules: {\n        type: [{\n          required: true,\n          message: \"请选择退换类型\"\n        }],\n        reason: [{\n          required: true,\n          message: \"请选择退换原因\"\n        }],\n        description: [{\n          required: true,\n          message: \"请填写问题描述\"\n        }, {\n          min: 10,\n          max: 500,\n          message: \"描述长度应在10-500字符之间\"\n        }]\n      }\n    };\n  },\n  created() {\n    if (!this.orderId) {\n      this.$message.error('缺少订单信息');\n      this.goBack();\n      return;\n    }\n    this.loadOrderDetail();\n  },\n  methods: {\n    loadOrderDetail() {\n      this.loading = true;\n      this.$request.get(\"/orders/detail/\" + this.orderId).then(res => {\n        if (res.code === \"200\") {\n          // 处理返回的订单数据\n          this.goods = {\n            id: res.data.goodsId,\n            name: res.data.goodsName,\n            img: res.data.goodsImg,\n            price: res.data.goodsPrice\n          };\n        } else {\n          this.$message.error(res.msg || '获取订单详情失败');\n          this.goBack();\n        }\n      }).catch(err => {\n        console.error('Error:', err);\n        this.$message.error('获取订单详情失败：' + (err.response?.data?.msg || err.message));\n        this.goBack();\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    handleUploadSuccess(res, file) {\n      if (res.code === \"200\") {\n        this.returnForm.images.push(res.data);\n        this.fileList.push({\n          name: file.name,\n          url: res.data\n        });\n        this.$message.success('图片上传成功');\n      } else {\n        this.$message.error(res.msg || '上传失败');\n      }\n    },\n    handleUploadError(err) {\n      this.$message.error('图片上传失败：' + err.message);\n    },\n    handleRemove(file) {\n      const index = this.fileList.indexOf(file);\n      if (index !== -1) {\n        this.fileList.splice(index, 1);\n        this.returnForm.images.splice(index, 1);\n      }\n    },\n    beforeUpload(file) {\n      const isImage = file.type.startsWith(\"image/\");\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImage) {\n        this.$message.error(\"只能上传图片文件！\");\n        return false;\n      }\n      if (!isLt2M) {\n        this.$message.error(\"图片大小不能超过 2MB！\");\n        return false;\n      }\n      if (this.fileList.length >= 3) {\n        this.$message.error(\"最多只能上传3张图片！\");\n        return false;\n      }\n      return true;\n    },\n    submitForm() {\n      if (this.submitting) return;\n      this.$refs.returnForm.validate(valid => {\n        if (valid) {\n          if (!this.goods.id || !this.goods.name) {\n            this.$message.error('商品信息不完整');\n            return;\n          }\n          this.submitting = true;\n          const formData = new FormData();\n          formData.append('orderId', this.orderId);\n          formData.append('goodsId', this.goods.id);\n          formData.append('goodsName', this.goods.name);\n          formData.append('type', this.returnForm.type);\n          formData.append('reason', this.returnForm.reason);\n          formData.append('description', this.returnForm.description);\n          if (this.returnForm.type === '1') {\n            formData.append('amount', this.goods.price);\n          }\n\n          // 添加图片\n          if (this.returnForm.images && this.returnForm.images.length > 0) {\n            this.returnForm.images.forEach(image => {\n              formData.append('images', image);\n            });\n          }\n          this.$request.post('/return/apply', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }).then(res => {\n            if (res.code === '200') {\n              this.$message.success('申请提交成功');\n              this.goBack();\n            } else {\n              this.$message.error(res.msg || '提交失败');\n            }\n          }).catch(err => {\n            this.$message.error('提交失败：' + err.message);\n          }).finally(() => {\n            this.submitting = false;\n          });\n        }\n      });\n    },\n    goBack() {\n      this.$router.push('/front/orders');\n    }\n  }\n};","map":{"version":3,"names":["name","data","orderId","$route","query","goods","returnForm","type","reason","description","images","uploadUrl","headers","localStorage","getItem","fileList","loading","submitting","rules","required","message","min","max","created","$message","error","goBack","loadOrderDetail","methods","$request","get","then","res","code","id","goodsId","goodsName","img","goodsImg","price","goodsPrice","msg","catch","err","console","response","finally","handleUploadSuccess","file","push","url","success","handleUploadError","handleRemove","index","indexOf","splice","beforeUpload","isImage","startsWith","isLt2M","size","length","submitForm","$refs","validate","valid","formData","FormData","append","forEach","image","post","$router"],"sources":["src/views/front/ReturnApply.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-content\">\r\n    <div\r\n      style=\"\r\n        width: 70%;\r\n        background-color: white;\r\n        margin: 30px auto;\r\n        border-radius: 20px;\r\n        padding: 20px;\r\n      \"\r\n    >\r\n      <div class=\"return-header\">\r\n        <div class=\"title\">申请退换货</div>\r\n        <div class=\"order-info\">\r\n          <span>订单号：{{ orderId }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 商品信息 -->\r\n      <div class=\"goods-info\" v-if=\"goods.img\">\r\n        <img :src=\"goods.img\" :alt=\"goods.name\" />\r\n        <div class=\"goods-detail\">\r\n          <div class=\"goods-name\">{{ goods.name }}</div>\r\n          <div class=\"goods-price\">￥{{ goods.price }}</div>\r\n        </div>\r\n      </div>\r\n      <div v-else class=\"loading-info\">\r\n        正在加载商品信息...\r\n      </div>\r\n\r\n      <!-- 退货表单 -->\r\n      <el-form\r\n        :model=\"returnForm\"\r\n        :rules=\"rules\"\r\n        ref=\"returnForm\"\r\n        label-width=\"100px\"\r\n        v-loading=\"loading\"\r\n      >\r\n        <el-form-item label=\"退换类型\" prop=\"type\">\r\n          <el-radio-group v-model=\"returnForm.type\">\r\n            <el-radio label=\"1\">退货退款</el-radio>\r\n            <el-radio label=\"2\">换货</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"退换原因\" prop=\"reason\">\r\n          <el-select\r\n            v-model=\"returnForm.reason\"\r\n            placeholder=\"请选择退换原因\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <el-option label=\"商品质量问题\" value=\"1\"></el-option>\r\n            <el-option label=\"商品损坏\" value=\"2\"></el-option>\r\n            <el-option label=\"商品与描述不符\" value=\"3\"></el-option>\r\n            <el-option label=\"尺寸不合适\" value=\"4\"></el-option>\r\n            <el-option label=\"其他原因\" value=\"5\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"问题描述\" prop=\"description\">\r\n          <el-input\r\n            type=\"textarea\"\r\n            v-model=\"returnForm.description\"\r\n            :rows=\"4\"\r\n            placeholder=\"请详细描述商品问题...\"\r\n            :maxlength=\"500\"\r\n            show-word-limit\r\n          ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"上传凭证\">\r\n          <el-upload\r\n            :action=\"uploadUrl\"\r\n            list-type=\"picture-card\"\r\n            :on-success=\"handleUploadSuccess\"\r\n            :on-error=\"handleUploadError\"\r\n            :before-upload=\"beforeUpload\"\r\n            :headers=\"headers\"\r\n            :file-list=\"fileList\"\r\n            :on-remove=\"handleRemove\"\r\n          >\r\n            <i class=\"el-icon-plus\"></i>\r\n          </el-upload>\r\n          <div class=\"upload-tip\">最多上传3张图片，每张不超过2M</div>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">\r\n            {{ submitting ? '提交中...' : '提交申请' }}\r\n          </el-button>\r\n          <el-button @click=\"goBack\">返回</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ReturnApply',\r\n  data() {\r\n    return {\r\n      orderId: this.$route.query.orderId,\r\n      goods: {},\r\n      returnForm: {\r\n        type: \"1\",\r\n        reason: \"\",\r\n        description: \"\",\r\n        images: [],\r\n      },\r\n      uploadUrl: '/api/upload',\r\n      headers: {\r\n        'Authorization': localStorage.getItem('token')\r\n      },\r\n      fileList: [],\r\n      loading: false,\r\n      submitting: false,\r\n      rules: {\r\n        type: [{ required: true, message: \"请选择退换类型\" }],\r\n        reason: [{ required: true, message: \"请选择退换原因\" }],\r\n        description: [\r\n          { required: true, message: \"请填写问题描述\" },\r\n          { min: 10, max: 500, message: \"描述长度应在10-500字符之间\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    if (!this.orderId) {\r\n      this.$message.error('缺少订单信息');\r\n      this.goBack();\r\n      return;\r\n    }\r\n    this.loadOrderDetail();\r\n  },\r\n  methods: {\r\n    loadOrderDetail() {\r\n  this.loading = true;\r\n  this.$request.get(\"/orders/detail/\" + this.orderId)\r\n    .then((res) => {\r\n      if (res.code === \"200\") {\r\n        // 处理返回的订单数据\r\n        this.goods = {\r\n          id: res.data.goodsId,\r\n          name: res.data.goodsName,\r\n          img: res.data.goodsImg,\r\n          price: res.data.goodsPrice\r\n        };\r\n      } else {\r\n        this.$message.error(res.msg || '获取订单详情失败');\r\n        this.goBack();\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.error('Error:', err);\r\n      this.$message.error('获取订单详情失败：' + (err.response?.data?.msg || err.message));\r\n      this.goBack();\r\n    })\r\n    .finally(() => {\r\n      this.loading = false;\r\n    });\r\n},\r\n\r\n    handleUploadSuccess(res, file) {\r\n      if (res.code === \"200\") {\r\n        this.returnForm.images.push(res.data);\r\n        this.fileList.push({\r\n          name: file.name,\r\n          url: res.data\r\n        });\r\n        this.$message.success('图片上传成功');\r\n      } else {\r\n        this.$message.error(res.msg || '上传失败');\r\n      }\r\n    },\r\n\r\n    handleUploadError(err) {\r\n      this.$message.error('图片上传失败：' + err.message);\r\n    },\r\n\r\n    handleRemove(file) {\r\n      const index = this.fileList.indexOf(file);\r\n      if (index !== -1) {\r\n        this.fileList.splice(index, 1);\r\n        this.returnForm.images.splice(index, 1);\r\n      }\r\n    },\r\n\r\n    beforeUpload(file) {\r\n      const isImage = file.type.startsWith(\"image/\");\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n      if (!isImage) {\r\n        this.$message.error(\"只能上传图片文件！\");\r\n        return false;\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error(\"图片大小不能超过 2MB！\");\r\n        return false;\r\n      }\r\n      if (this.fileList.length >= 3) {\r\n        this.$message.error(\"最多只能上传3张图片！\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n\r\n    submitForm() {\r\n      if (this.submitting) return;\r\n\r\n      this.$refs.returnForm.validate((valid) => {\r\n        if (valid) {\r\n          if (!this.goods.id || !this.goods.name) {\r\n            this.$message.error('商品信息不完整');\r\n            return;\r\n          }\r\n\r\n          this.submitting = true;\r\n          const formData = new FormData();\r\n          formData.append('orderId', this.orderId);\r\n          formData.append('goodsId', this.goods.id);\r\n          formData.append('goodsName', this.goods.name);\r\n          formData.append('type', this.returnForm.type);\r\n          formData.append('reason', this.returnForm.reason);\r\n          formData.append('description', this.returnForm.description);\r\n          \r\n          if (this.returnForm.type === '1') {\r\n            formData.append('amount', this.goods.price);\r\n          }\r\n\r\n          // 添加图片\r\n          if (this.returnForm.images && this.returnForm.images.length > 0) {\r\n            this.returnForm.images.forEach(image => {\r\n              formData.append('images', image);\r\n            });\r\n          }\r\n\r\n          this.$request.post('/return/apply', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          }).then(res => {\r\n            if (res.code === '200') {\r\n              this.$message.success('申请提交成功');\r\n              this.goBack();\r\n            } else {\r\n              this.$message.error(res.msg || '提交失败');\r\n            }\r\n          }).catch(err => {\r\n            this.$message.error('提交失败：' + err.message);\r\n          }).finally(() => {\r\n            this.submitting = false;\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    goBack() {\r\n      this.$router.push('/front/orders');\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.main-content {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n  padding: 20px 0;\r\n}\r\n\r\n.return-header {\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.title {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.order-info {\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.goods-info {\r\n  display: flex;\r\n  padding: 15px;\r\n  background: #f8f8f8;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.loading-info {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #909399;\r\n}\r\n\r\n.goods-info img {\r\n  width: 80px;\r\n  height: 80px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n}\r\n\r\n.goods-detail {\r\n  margin-left: 15px;\r\n  flex: 1;\r\n}\r\n\r\n.goods-name {\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n  color: #303133;\r\n}\r\n\r\n.goods-price {\r\n  color: #ff5000;\r\n  font-weight: bold;\r\n}\r\n\r\n.upload-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n\r\n.el-upload--picture-card {\r\n  width: 100px;\r\n  height: 100px;\r\n  line-height: 100px;\r\n}\r\n\r\n.el-upload-list--picture-card .el-upload-list__item {\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}