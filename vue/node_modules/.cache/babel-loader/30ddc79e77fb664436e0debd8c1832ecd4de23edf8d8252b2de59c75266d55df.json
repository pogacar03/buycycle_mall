{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport NavBar from '@/component/NavBar.vue';\nexport default {\n  name: \"Type\",\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      categoryId: null,\n      categoryName: \"商品分类\",\n      goods: [],\n      originalGoods: [],\n      filteredGoods: [],\n      searchKeyword: \"\",\n      priceRange: [0, 50000],\n      selectedBrands: [],\n      sortBy: \"default\",\n      // 定义品牌关键词列表\n      brandKeywords: {\n        Specialized: \"specialized\",\n        Trek: \"trek\",\n        Giant: \"giant\",\n        Cannondale: \"cannondale\",\n        Scott: \"scott\",\n        Merida: \"merida\",\n        BMC: \"bmc\",\n        Shimano: \"shimano\",\n        Sram: \"sram\",\n        Java: \"java\",\n        永久: \"永久\",\n        Giant: \"捷安特\",\n        凤凰: \"凤凰\"\n      }\n    };\n  },\n  computed: {\n    // 计算可用的品牌列表（仅显示当前商品中实际存在的品牌）\n    availableBrands() {\n      const brands = new Set();\n      this.originalGoods.forEach(item => {\n        for (const [brand, keyword] of Object.entries(this.brandKeywords)) {\n          if (item.name.toLowerCase().includes(keyword)) {\n            brands.add(brand);\n            break;\n          }\n        }\n      });\n      return Array.from(brands);\n    }\n  },\n  created() {\n    this.categoryId = this.$route.query.id;\n    this.loadGoods();\n  },\n  methods: {\n    loadGoods() {\n      this.$request.get(\"/goods/selectByTypeId\", {\n        params: {\n          id: this.categoryId\n        }\n      }).then(res => {\n        if (res.code === \"200\") {\n          this.goods = res.data;\n          this.originalGoods = [...res.data];\n          this.filteredGoods = [...this.goods];\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleSearch() {\n      if (!this.searchKeyword.trim()) {\n        this.goods = [...this.originalGoods];\n        this.handleFilter();\n        return;\n      }\n      this.goods = this.originalGoods.filter(item => item.name.toLowerCase().includes(this.searchKeyword.toLowerCase()));\n      this.handleFilter();\n    },\n    handleFilter() {\n      let filtered = [...this.goods];\n\n      // 价格筛选\n      filtered = filtered.filter(item => item.price >= this.priceRange[0] && item.price <= this.priceRange[1]);\n\n      // 品牌筛选\n      if (this.selectedBrands.length > 0) {\n        filtered = filtered.filter(item => {\n          const itemName = item.name.toLowerCase();\n          return this.selectedBrands.some(brand => itemName.includes(this.brandKeywords[brand]));\n        });\n      }\n\n      // 排序\n      switch (this.sortBy) {\n        case \"priceAsc\":\n          filtered.sort((a, b) => a.price - b.price);\n          break;\n        case \"priceDesc\":\n          filtered.sort((a, b) => b.price - a.price);\n          break;\n        default:\n          break;\n      }\n      this.filteredGoods = filtered;\n    },\n    resetFilters() {\n      this.priceRange = [0, 50000];\n      this.selectedBrands = [];\n      this.sortBy = \"default\";\n      this.searchKeyword = \"\";\n      this.goods = [...this.originalGoods];\n      this.filteredGoods = [...this.goods];\n    },\n    navTo(url) {\n      location.href = url;\n    }\n  }\n};","map":{"version":3,"names":["NavBar","name","components","data","categoryId","categoryName","goods","originalGoods","filteredGoods","searchKeyword","priceRange","selectedBrands","sortBy","brandKeywords","Specialized","Trek","Giant","Cannondale","Scott","Merida","BMC","Shimano","Sram","Java","永久","凤凰","computed","availableBrands","brands","Set","forEach","item","brand","keyword","Object","entries","toLowerCase","includes","add","Array","from","created","$route","query","id","loadGoods","methods","$request","get","params","then","res","code","$message","error","msg","handleSearch","trim","handleFilter","filter","filtered","price","length","itemName","some","sort","a","b","resetFilters","navTo","url","location","href"],"sources":["src/views/front/Type.vue"],"sourcesContent":["<template>\n  <div class=\"main-content\">\n    <!-- 添加导航栏 -->\n    <nav-bar></nav-bar>\n    \n    <div class=\"container\">\n      <!-- 搜索框 -->\n      <div class=\"search-container\">\n        <div class=\"search-box\">\n          <el-input\n            v-model=\"searchKeyword\"\n            placeholder=\"搜索商品\"\n            prefix-icon=\"el-icon-search\"\n            clearable\n            @keyup.enter.native=\"handleSearch\"\n          >\n            <el-button\n              slot=\"append\"\n              icon=\"el-icon-search\"\n              @click=\"handleSearch\"\n            >\n              搜索\n            </el-button>\n          </el-input>\n        </div>\n      </div>\n\n      <div class=\"content-area\">\n        <!-- 筛选器侧边栏 -->\n        <div class=\"filter-sidebar\">\n          <div class=\"filter-section\">\n            <h3>价格区间</h3>\n            <el-slider\n              v-model=\"priceRange\"\n              range\n              :min=\"0\"\n              :max=\"50000\"\n              :step=\"100\"\n              @change=\"handleFilter\"\n            ></el-slider>\n            <div class=\"price-range-text\">\n              ¥{{ priceRange[0] }} - ¥{{ priceRange[1] }}\n            </div>\n          </div>\n\n          <div class=\"filter-section\">\n            <h3>品牌</h3>\n            <el-checkbox-group v-model=\"selectedBrands\" @change=\"handleFilter\">\n              <el-checkbox\n                v-for=\"brand in availableBrands\"\n                :key=\"brand\"\n                :label=\"brand\"\n              >\n                {{ brand }}\n              </el-checkbox>\n            </el-checkbox-group>\n          </div>\n\n          <div class=\"filter-section\">\n            <h3>排序方式</h3>\n            <el-radio-group v-model=\"sortBy\" @change=\"handleFilter\">\n              <el-radio label=\"default\">默认</el-radio>\n              <el-radio label=\"priceAsc\">价格从低到高</el-radio>\n              <el-radio label=\"priceDesc\">价格从高到低</el-radio>\n            </el-radio-group>\n          </div>\n\n          <el-button type=\"primary\" @click=\"resetFilters\" class=\"reset-btn\">\n            重置筛选\n          </el-button>\n        </div>\n\n        <!-- 商品展示区域 -->\n        <div class=\"goods-container\">\n          <div class=\"goods-header\">\n            <h2>{{ categoryName }}</h2>\n            <span class=\"goods-count\"\n              >共 {{ filteredGoods.length }} 个商品</span\n            >\n          </div>\n\n          <div class=\"goods-grid\">\n            <div\n              v-for=\"item in filteredGoods\"\n              :key=\"item.id\"\n              class=\"goods-card\"\n              @click=\"navTo('/front/detail?id=' + item.id)\"\n            >\n              <div class=\"goods-img\">\n                <img :src=\"item.img\" :alt=\"item.name\" />\n              </div>\n              <div class=\"goods-info\">\n                <h3>{{ item.name }}</h3>\n                <div class=\"price\">¥{{ item.price }}</div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 无数据提示 -->\n          <div v-if=\"filteredGoods.length === 0\" class=\"no-data\">\n            <i class=\"el-icon-warning-outline\"></i>\n            <p>暂无相关商品</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NavBar from '@/component/NavBar.vue';\n\nexport default {\n  name: \"Type\",\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      categoryId: null,\n      categoryName: \"商品分类\",\n      goods: [],\n      originalGoods: [],\n      filteredGoods: [],\n      searchKeyword: \"\",\n      priceRange: [0, 50000],\n      selectedBrands: [],\n      sortBy: \"default\",\n      // 定义品牌关键词列表\n      brandKeywords: {\n        Specialized: \"specialized\",\n        Trek: \"trek\",\n        Giant: \"giant\",\n        Cannondale: \"cannondale\",\n        Scott: \"scott\",\n        Merida: \"merida\",\n        BMC: \"bmc\",\n        Shimano: \"shimano\",\n        Sram: \"sram\",\n        Java: \"java\",\n        永久: \"永久\",\n        Giant: \"捷安特\",\n        凤凰:\"凤凰\"\n      },\n    };\n  },\n  computed: {\n    // 计算可用的品牌列表（仅显示当前商品中实际存在的品牌）\n    availableBrands() {\n      const brands = new Set();\n      this.originalGoods.forEach((item) => {\n        for (const [brand, keyword] of Object.entries(this.brandKeywords)) {\n          if (item.name.toLowerCase().includes(keyword)) {\n            brands.add(brand);\n            break;\n          }\n        }\n      });\n      return Array.from(brands);\n    },\n  },\n  created() {\n    this.categoryId = this.$route.query.id;\n    this.loadGoods();\n  },\n  methods: {\n    loadGoods() {\n      this.$request\n        .get(\"/goods/selectByTypeId\", {\n          params: {\n            id: this.categoryId,\n          },\n        })\n        .then((res) => {\n          if (res.code === \"200\") {\n            this.goods = res.data;\n            this.originalGoods = [...res.data];\n            this.filteredGoods = [...this.goods];\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n    },\n\n    handleSearch() {\n      if (!this.searchKeyword.trim()) {\n        this.goods = [...this.originalGoods];\n        this.handleFilter();\n        return;\n      }\n\n      this.goods = this.originalGoods.filter((item) =>\n        item.name.toLowerCase().includes(this.searchKeyword.toLowerCase())\n      );\n      this.handleFilter();\n    },\n\n    handleFilter() {\n      let filtered = [...this.goods];\n\n      // 价格筛选\n      filtered = filtered.filter(\n        (item) =>\n          item.price >= this.priceRange[0] && item.price <= this.priceRange[1]\n      );\n\n      // 品牌筛选\n      if (this.selectedBrands.length > 0) {\n        filtered = filtered.filter((item) => {\n          const itemName = item.name.toLowerCase();\n          return this.selectedBrands.some((brand) =>\n            itemName.includes(this.brandKeywords[brand])\n          );\n        });\n      }\n\n      // 排序\n      switch (this.sortBy) {\n        case \"priceAsc\":\n          filtered.sort((a, b) => a.price - b.price);\n          break;\n        case \"priceDesc\":\n          filtered.sort((a, b) => b.price - a.price);\n          break;\n        default:\n          break;\n      }\n\n      this.filteredGoods = filtered;\n    },\n\n    resetFilters() {\n      this.priceRange = [0, 50000];\n      this.selectedBrands = [];\n      this.sortBy = \"default\";\n      this.searchKeyword = \"\";\n      this.goods = [...this.originalGoods];\n      this.filteredGoods = [...this.goods];\n    },\n\n    navTo(url) {\n      location.href = url;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.main-content {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n  padding: 20px 0;\n}\n\n.container {\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 0 20px;\n}\n\n/* 搜索框样式 */\n.search-container {\n  margin-bottom: 20px;\n}\n\n.search-box {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.search-box :deep(.el-input__inner) {\n  height: 45px;\n  line-height: 45px;\n  padding-left: 20px;\n  border-radius: 25px;\n  font-size: 16px;\n  border: 2px solid #e8e8e8;\n  transition: all 0.3s;\n}\n\n.search-box :deep(.el-input__inner):focus {\n  border-color: #04bf04;\n  box-shadow: 0 0 0 2px rgba(4, 191, 4, 0.1);\n}\n\n.search-box :deep(.el-input-group__append) {\n  background: #04bf04;\n  border-color: #04bf04;\n  color: white;\n  border-top-right-radius: 25px;\n  border-bottom-right-radius: 25px;\n  padding: 0 25px;\n  transition: all 0.3s;\n}\n\n.search-box :deep(.el-input-group__append):hover {\n  background: #2ecc71;\n  border-color: #2ecc71;\n}\n\n.search-box :deep(.el-button) {\n  font-size: 16px;\n  border: none;\n  background: transparent;\n  color: white;\n}\n\n/* 内容区域布局 */\n.content-area {\n  display: flex;\n  gap: 30px;\n  margin-top: 20px;\n}\n\n/* 筛选器侧边栏样式 */\n.filter-sidebar {\n  width: 280px;\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  height: fit-content;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n.filter-section {\n  margin-bottom: 25px;\n}\n\n.filter-section h3 {\n  font-size: 16px;\n  color: #2c3e50;\n  margin-bottom: 15px;\n  font-weight: 600;\n}\n\n.price-range-text {\n  margin-top: 10px;\n  color: #666;\n  font-size: 14px;\n}\n\n.filter-section :deep(.el-checkbox-group) {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.filter-section :deep(.el-radio-group) {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.reset-btn {\n  width: 100%;\n  margin-top: 20px;\n}\n\n/* 商品展示区域样式 */\n.goods-container {\n  flex: 1;\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n.goods-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #eee;\n}\n\n.goods-header h2 {\n  font-size: 20px;\n  color: #2c3e50;\n  margin: 0;\n}\n\n.goods-count {\n  color: #666;\n  font-size: 14px;\n}\n\n.goods-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  gap: 20px;\n}\n\n.goods-card {\n  background: white;\n  border-radius: 8px;\n  overflow: hidden;\n  transition: all 0.3s;\n  cursor: pointer;\n  border: 1px solid #eee;\n}\n\n.goods-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\n}\n\n.goods-img {\n  position: relative;\n  padding-top: 100%;\n}\n\n.goods-img img {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.goods-info {\n  padding: 15px;\n}\n\n.goods-info h3 {\n  margin: 0;\n  font-size: 16px;\n  color: #2c3e50;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.price {\n  color: #ff5000;\n  font-size: 18px;\n  font-weight: bold;\n}\n\n/* 无数据提示样式 */\n.no-data {\n  text-align: center;\n  padding: 40px 0;\n  color: #999;\n}\n\n.no-data i {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n\n.no-data p {\n  margin: 0;\n  font-size: 16px;\n}\n\n/* 响应式布局 */\n@media (max-width: 1200px) {\n  .content-area {\n    flex-direction: column;\n  }\n\n  .filter-sidebar {\n    width: 100%;\n  }\n\n  .filter-section :deep(.el-checkbox-group),\n  .filter-section :deep(.el-radio-group) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 15px;\n  }\n}\n\n@media (max-width: 768px) {\n  .container {\n    padding: 0 10px;\n  }\n\n  .goods-grid {\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n    gap: 10px;\n  }\n\n  .goods-info {\n    padding: 10px;\n  }\n\n  .goods-info h3 {\n    font-size: 14px;\n  }\n\n  .price {\n    font-size: 16px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}