{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"FrontLayout\",\n  data() {\n    return {\n      top: '',\n      notice: [],\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      showAIDialog: false,\n      // 控制对话框的显示与隐藏\n      question: '',\n      // 用户输入的问题\n      answer: '' // AI 返回的答案\n    };\n  },\n  mounted() {\n    this.loadNotice();\n  },\n  methods: {\n    loadNotice() {\n      this.$request.get('/notice/selectAll').then(res => {\n        this.notice = res.data;\n        let i = 0;\n        if (this.notice && this.notice.length) {\n          this.top = this.notice[0].content;\n          setInterval(() => {\n            this.top = this.notice[i].content;\n            i++;\n            if (i === this.notice.length) {\n              i = 0;\n            }\n          }, 2500);\n        }\n      });\n    },\n    updateUser() {\n      this.user = JSON.parse(localStorage.getItem('xm-user') || '{}'); // 重新获取下用户的最新信息\n    },\n    navTo(url) {\n      location.href = url;\n    },\n    // 退出登录\n    logout() {\n      localStorage.removeItem(\"xm-user\");\n      this.$router.push(\"/login\");\n    },\n    search() {\n      let name = this.name ? this.name : '';\n      location.href = '/front/search?name=' + name;\n    },\n    askAI() {\n      if (this.question.trim() === '') {\n        return;\n      }\n      // 这里调用接口向 AI 发送问题并获取答案\n      this.$request.post('/ai/ask', {\n        question: this.question\n      }).then(res => {\n        this.answer = res.data.answer;\n      }).catch(error => {\n        console.error('请求失败:', error);\n        this.answer = '请求失败，请稍后再试。';\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","top","notice","user","JSON","parse","localStorage","getItem","showAIDialog","question","answer","mounted","loadNotice","methods","$request","get","then","res","i","length","content","setInterval","updateUser","navTo","url","location","href","logout","removeItem","$router","push","search","askAI","trim","post","catch","error","console"],"sources":["src/views/Front.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"front-notice\"><i class=\"el-icon-bell\" style=\"margin-right: 2px\"></i>公告：{{ top }}</div>\r\n    <!--头部-->\r\n    <div class=\"front-header\">\r\n      <!-- title导航到home -->\r\n      <div class=\"front-header-left\" @click=\"navTo('/front/home')\">\r\n        <img src=\"@/assets/imgs/logo.png\" alt=\"这里是平台的logo\">\r\n        <div class=\"title\">BuyCycle购物平台</div>\r\n      </div>\r\n      <!-- 搜索框 -->\r\n      <div class=\"front-header-center\" style=\"text-align: right\">\r\n        <el-input style=\"width: 200px\" placeholder=\"请输入商品名称\" v-model=\"name\"></el-input>\r\n        <el-button type=\"primary\" style=\"margin-left: 5px\" @click=\"search\">搜索</el-button>\r\n      </div>\r\n      <div class=\"front-header-right\">\r\n        <!-- 用户没登录，显示登陆和注册 -->\r\n        <div v-if=\"!user.username\">\r\n          <el-button @click=\"$router.push('/login')\">登录</el-button>\r\n          <el-button @click=\"$router.push('/register')\">注册</el-button>\r\n        </div>\r\n        <!-- 用户登录后 -->\r\n        <div v-else>\r\n          <el-dropdown>\r\n            <div class=\"front-header-dropdown\">\r\n              <img @click=\"navTo('/front/person')\" :src=\"user.avatar\" alt=\"用户没头像\">\r\n              <div style=\"margin-left: 10px\">\r\n                <span>{{ user.name }}</span><i class=\"el-icon-arrow-down\" style=\"margin-left: 5px\"></i>\r\n              </div>\r\n            </div>\r\n            <el-dropdown-menu slot=\"dropdown\">\r\n              <el-dropdown-item>\r\n                <div style=\"text-decoration: none\" @click=\"navTo('/front/cart')\">我的购物车</div>\r\n              </el-dropdown-item>\r\n              <el-dropdown-item>\r\n                <div style=\"text-decoration: none\" @click=\"navTo('/front/collect')\">我的收藏</div>\r\n              </el-dropdown-item>\r\n              <el-dropdown-item>\r\n                <div style=\"text-decoration: none\" @click=\"navTo('/front/address')\">我的地址</div>\r\n              </el-dropdown-item>\r\n              <el-dropdown-item>\r\n                <div style=\"text-decoration: none\" @click=\"navTo('/front/orders')\">我的订单</div>\r\n              </el-dropdown-item>\r\n              <el-dropdown-item>\r\n                <div style=\"text-decoration: none\" @click=\"logout\">退出</div>\r\n              </el-dropdown-item>\r\n            </el-dropdown-menu>\r\n          </el-dropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- AI 客服按钮 -->\r\n    <el-button type=\"primary\" @click=\"showAIDialog = true\" style=\"position: fixed; bottom: 20px; right: 20px;\">AI 客服</el-button>\r\n\r\n    <!-- AI 客服对话框 -->\r\n    <el-dialog :visible.sync=\"showAIDialog\" title=\"AI 客服\" width=\"50%\">\r\n      <div>\r\n        <el-input\r\n          v-model=\"question\"\r\n          placeholder=\"请输入你的问题\"\r\n          @keyup.enter=\"askAI\"\r\n        ></el-input>\r\n        <el-button type=\"primary\" @click=\"askAI\">提问</el-button>\r\n      </div>\r\n      <div v-if=\"answer\" style=\"margin-top: 20px;\">\r\n        <p>{{ answer }}</p>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!--主体-->\r\n    <div class=\"main-body\">\r\n      <router-view ref=\"child\" @update:user=\"updateUser\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"FrontLayout\",\r\n\r\n  data() {\r\n    return {\r\n      top: '',\r\n      notice: [],\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\r\n      showAIDialog: false, // 控制对话框的显示与隐藏\r\n      question: '', // 用户输入的问题\r\n      answer: '' // AI 返回的答案\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.loadNotice()\r\n  },\r\n  methods: {\r\n    loadNotice() {\r\n      this.$request.get('/notice/selectAll').then(res => {\r\n        this.notice = res.data\r\n        let i = 0\r\n        if (this.notice && this.notice.length) {\r\n          this.top = this.notice[0].content\r\n          setInterval(() => {\r\n            this.top = this.notice[i].content\r\n            i++\r\n            if (i === this.notice.length) {\r\n              i = 0\r\n            }\r\n          }, 2500)\r\n        }\r\n      })\r\n    },\r\n    updateUser() {\r\n      this.user = JSON.parse(localStorage.getItem('xm-user') || '{}')   // 重新获取下用户的最新信息\r\n    },\r\n    navTo(url) {\r\n      location.href = url\r\n    },\r\n    // 退出登录\r\n    logout() {\r\n      localStorage.removeItem(\"xm-user\");\r\n      this.$router.push(\"/login\");\r\n    },\r\n    search() {\r\n      let name = this.name ? this.name : ''\r\n      location.href = '/front/search?name=' + name\r\n    },\r\n    askAI() {\r\n      if (this.question.trim() === '') {\r\n        return;\r\n      }\r\n      // 这里调用接口向 AI 发送问题并获取答案\r\n      this.$request.post('/ai/ask', { question: this.question }).then((res) => {\r\n        this.answer = res.data.answer;\r\n      }).catch((error) => {\r\n        console.error('请求失败:', error);\r\n        this.answer = '请求失败，请稍后再试。';\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import \"@/assets/css/front.css\";\r\n</style>"],"mappings":";AA6EA;EACAA,IAAA;EAEAC,KAAA;IACA;MACAC,GAAA;MACAC,MAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,YAAA;MAAA;MACAC,QAAA;MAAA;MACAC,MAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACAD,WAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,sBAAAC,IAAA,CAAAC,GAAA;QACA,KAAAf,MAAA,GAAAe,GAAA,CAAAjB,IAAA;QACA,IAAAkB,CAAA;QACA,SAAAhB,MAAA,SAAAA,MAAA,CAAAiB,MAAA;UACA,KAAAlB,GAAA,QAAAC,MAAA,IAAAkB,OAAA;UACAC,WAAA;YACA,KAAApB,GAAA,QAAAC,MAAA,CAAAgB,CAAA,EAAAE,OAAA;YACAF,CAAA;YACA,IAAAA,CAAA,UAAAhB,MAAA,CAAAiB,MAAA;cACAD,CAAA;YACA;UACA;QACA;MACA;IACA;IACAI,WAAA;MACA,KAAAnB,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;IACAgB,MAAAC,GAAA;MACAC,QAAA,CAAAC,IAAA,GAAAF,GAAA;IACA;IACA;IACAG,OAAA;MACArB,YAAA,CAAAsB,UAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,OAAA;MACA,IAAAhC,IAAA,QAAAA,IAAA,QAAAA,IAAA;MACA0B,QAAA,CAAAC,IAAA,2BAAA3B,IAAA;IACA;IACAiC,MAAA;MACA,SAAAvB,QAAA,CAAAwB,IAAA;QACA;MACA;MACA;MACA,KAAAnB,QAAA,CAAAoB,IAAA;QAAAzB,QAAA,OAAAA;MAAA,GAAAO,IAAA,CAAAC,GAAA;QACA,KAAAP,MAAA,GAAAO,GAAA,CAAAjB,IAAA,CAAAU,MAAA;MACA,GAAAyB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,UAAAA,KAAA;QACA,KAAA1B,MAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}