{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nexport default {\n  name: 'Type',\n  data() {\n    return {\n      categoryId: null,\n      categoryName: '商品分类',\n      goods: [],\n      originalGoods: [],\n      filteredGoods: [],\n      searchKeyword: '',\n      priceRange: [0, 50000],\n      selectedBrands: [],\n      sortBy: 'default',\n      // 定义品牌关键词列表\n      brandKeywords: {\n        'Specialized': 'specialized',\n        'Trek': 'trek',\n        'Giant': 'giant',\n        'Cannondale': 'cannondale',\n        'Scott': 'scott',\n        'Merida': 'merida',\n        'BMC': 'bmc',\n        'Shimano': 'shimano',\n        'Sram': 'sram',\n        'Java': 'java',\n        '永久': '永久',\n        'Giant': '捷安特'\n      }\n    };\n  },\n  computed: {\n    // 计算可用的品牌列表（仅显示当前商品中实际存在的品牌）\n    availableBrands() {\n      const brands = new Set();\n      this.originalGoods.forEach(item => {\n        for (const [brand, keyword] of Object.entries(this.brandKeywords)) {\n          if (item.name.toLowerCase().includes(keyword)) {\n            brands.add(brand);\n            break;\n          }\n        }\n      });\n      return Array.from(brands);\n    }\n  },\n  created() {\n    this.categoryId = this.$route.query.id;\n    this.loadGoods();\n  },\n  methods: {\n    loadGoods() {\n      this.$request.get('/goods/selectByTypeId', {\n        params: {\n          id: this.categoryId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.goods = res.data;\n          this.originalGoods = [...res.data];\n          this.filteredGoods = [...this.goods];\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    isImageUrl(str) {\n      if (!str) return false;\n      return str.match(/\\.(jpeg|jpg|gif|png)$/) != null || str.startsWith('http') || str.startsWith('data:image');\n    },\n    handleSearch() {\n      if (!this.searchKeyword.trim()) {\n        this.goods = [...this.originalGoods];\n        this.handleFilter();\n        return;\n      }\n      this.goods = this.originalGoods.filter(item => item.name.toLowerCase().includes(this.searchKeyword.toLowerCase()));\n      this.handleFilter();\n    },\n    handleFilter() {\n      let filtered = [...this.goods];\n\n      // 价格筛选\n      filtered = filtered.filter(item => item.price >= this.priceRange[0] && item.price <= this.priceRange[1]);\n\n      // 品牌筛选\n      if (this.selectedBrands.length > 0) {\n        filtered = filtered.filter(item => {\n          const itemName = item.name.toLowerCase();\n          return this.selectedBrands.some(brand => itemName.includes(this.brandKeywords[brand]));\n        });\n      }\n\n      // 排序\n      switch (this.sortBy) {\n        case 'priceAsc':\n          filtered.sort((a, b) => a.price - b.price);\n          break;\n        case 'priceDesc':\n          filtered.sort((a, b) => b.price - a.price);\n          break;\n        default:\n          break;\n      }\n      this.filteredGoods = filtered;\n    },\n    resetFilters() {\n      this.priceRange = [0, 50000];\n      this.selectedBrands = [];\n      this.sortBy = 'default';\n      this.searchKeyword = '';\n      this.goods = [...this.originalGoods];\n      this.filteredGoods = [...this.goods];\n    },\n    navTo(url) {\n      location.href = url;\n    }\n  }\n};","map":{"version":3,"names":["name","data","categoryId","categoryName","goods","originalGoods","filteredGoods","searchKeyword","priceRange","selectedBrands","sortBy","brandKeywords","computed","availableBrands","brands","Set","forEach","item","brand","keyword","Object","entries","toLowerCase","includes","add","Array","from","created","$route","query","id","loadGoods","methods","$request","get","params","then","res","code","$message","error","msg","isImageUrl","str","match","startsWith","handleSearch","trim","handleFilter","filter","filtered","price","length","itemName","some","sort","a","b","resetFilters","navTo","url","location","href"],"sources":["src/views/front/Type.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-content\">\r\n    <div class=\"container\">\r\n      <!-- 搜索框 -->\r\n      <div class=\"search-container\">\r\n        <div class=\"search-box\">\r\n          <el-input\r\n            v-model=\"searchKeyword\"\r\n            placeholder=\"搜索商品\"\r\n            prefix-icon=\"el-icon-search\"\r\n            clearable\r\n            @keyup.enter.native=\"handleSearch\"\r\n          >\r\n            <el-button \r\n              slot=\"append\" \r\n              icon=\"el-icon-search\"\r\n              @click=\"handleSearch\">\r\n              搜索\r\n            </el-button>\r\n          </el-input>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"content-area\">\r\n        <!-- 筛选器侧边栏 -->\r\n        <div class=\"filter-sidebar\">\r\n          <div class=\"filter-section\">\r\n            <h3>价格区间</h3>\r\n            <el-slider\r\n              v-model=\"priceRange\"\r\n              range\r\n              :min=\"0\"\r\n              :max=\"50000\"\r\n              :step=\"100\"\r\n              @change=\"handleFilter\"\r\n            ></el-slider>\r\n            <div class=\"price-range-text\">\r\n              ¥{{ priceRange[0] }} - ¥{{ priceRange[1] }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"filter-section\">\r\n            <h3>品牌</h3>\r\n            <el-checkbox-group v-model=\"selectedBrands\" @change=\"handleFilter\">\r\n              <el-checkbox \r\n                v-for=\"brand in availableBrands\" \r\n                :key=\"brand\" \r\n                :label=\"brand\">\r\n                {{ brand }}\r\n              </el-checkbox>\r\n            </el-checkbox-group>\r\n          </div>\r\n\r\n          <div class=\"filter-section\">\r\n            <h3>排序方式</h3>\r\n            <el-radio-group v-model=\"sortBy\" @change=\"handleFilter\">\r\n              <el-radio label=\"default\">默认</el-radio>\r\n              <el-radio label=\"priceAsc\">价格从低到高</el-radio>\r\n              <el-radio label=\"priceDesc\">价格从高到低</el-radio>\r\n            </el-radio-group>\r\n          </div>\r\n\r\n          <el-button type=\"primary\" @click=\"resetFilters\" class=\"reset-btn\">\r\n            重置筛选\r\n          </el-button>\r\n        </div>\r\n\r\n        <!-- 商品展示区域 -->\r\n        <div class=\"goods-container\">\r\n          <div class=\"goods-header\">\r\n            <h2>{{ categoryName }}</h2>\r\n            <span class=\"goods-count\">共 {{ filteredGoods.length }} 个商品</span>\r\n          </div>\r\n\r\n          <div class=\"goods-grid\">\r\n            <div \r\n              v-for=\"item in filteredGoods\" \r\n              :key=\"item.id\" \r\n              class=\"goods-card\"\r\n              @click=\"navTo('/front/detail?id=' + item.id)\"\r\n            >\r\n              <div class=\"goods-img\">\r\n                <img :src=\"item.img\" :alt=\"item.name\">\r\n              </div>\r\n              <div class=\"goods-info\">\r\n                <h3>{{ item.name }}</h3>\r\n                <p class=\"goods-desc\" v-if=\"item.description && !isImageUrl(item.description)\">\r\n                  {{ item.description }}\r\n                </p>\r\n                <div class=\"price\">¥{{ item.price }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 无数据提示 -->\r\n          <div v-if=\"filteredGoods.length === 0\" class=\"no-data\">\r\n            <i class=\"el-icon-warning-outline\"></i>\r\n            <p>暂无相关商品</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Type',\r\n  data() {\r\n    return {\r\n      categoryId: null,\r\n      categoryName: '商品分类',\r\n      goods: [],\r\n      originalGoods: [],\r\n      filteredGoods: [],\r\n      searchKeyword: '',\r\n      priceRange: [0, 50000],\r\n      selectedBrands: [],\r\n      sortBy: 'default',\r\n      // 定义品牌关键词列表\r\n      brandKeywords: {\r\n        'Specialized': 'specialized',\r\n        'Trek': 'trek',\r\n        'Giant': 'giant',\r\n        'Cannondale': 'cannondale',\r\n        'Scott': 'scott',\r\n        'Merida': 'merida',\r\n        'BMC': 'bmc',\r\n        'Shimano': 'shimano',\r\n        'Sram': 'sram',\r\n        'Java':'java',\r\n        '永久':'永久',\r\n        'Giant':'捷安特'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    // 计算可用的品牌列表（仅显示当前商品中实际存在的品牌）\r\n    availableBrands() {\r\n      const brands = new Set()\r\n      this.originalGoods.forEach(item => {\r\n        for (const [brand, keyword] of Object.entries(this.brandKeywords)) {\r\n          if (item.name.toLowerCase().includes(keyword)) {\r\n            brands.add(brand)\r\n            break\r\n          }\r\n        }\r\n      })\r\n      return Array.from(brands)\r\n    }\r\n  },\r\n  created() {\r\n    this.categoryId = this.$route.query.id\r\n    this.loadGoods()\r\n  },\r\n  methods: {\r\n    loadGoods() {\r\n      this.$request.get('/goods/selectByTypeId', {\r\n        params: {\r\n          id: this.categoryId\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.goods = res.data\r\n          this.originalGoods = [...res.data]\r\n          this.filteredGoods = [...this.goods]\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n\r\n    isImageUrl(str) {\r\n      if (!str) return false;\r\n      return str.match(/\\.(jpeg|jpg|gif|png)$/) != null || \r\n             str.startsWith('http') || \r\n             str.startsWith('data:image');\r\n    },\r\n\r\n    handleSearch() {\r\n      if (!this.searchKeyword.trim()) {\r\n        this.goods = [...this.originalGoods]\r\n        this.handleFilter()\r\n        return\r\n      }\r\n      \r\n      this.goods = this.originalGoods.filter(item => \r\n        item.name.toLowerCase().includes(this.searchKeyword.toLowerCase())\r\n      )\r\n      this.handleFilter()\r\n    },\r\n\r\n    handleFilter() {\r\n      let filtered = [...this.goods]\r\n\r\n      // 价格筛选\r\n      filtered = filtered.filter(item => \r\n        item.price >= this.priceRange[0] && item.price <= this.priceRange[1]\r\n      )\r\n\r\n      // 品牌筛选\r\n      if (this.selectedBrands.length > 0) {\r\n        filtered = filtered.filter(item => {\r\n          const itemName = item.name.toLowerCase()\r\n          return this.selectedBrands.some(brand => \r\n            itemName.includes(this.brandKeywords[brand])\r\n          )\r\n        })\r\n      }\r\n\r\n      // 排序\r\n      switch (this.sortBy) {\r\n        case 'priceAsc':\r\n          filtered.sort((a, b) => a.price - b.price)\r\n          break\r\n        case 'priceDesc':\r\n          filtered.sort((a, b) => b.price - a.price)\r\n          break\r\n        default:\r\n          break\r\n      }\r\n\r\n      this.filteredGoods = filtered\r\n    },\r\n\r\n    resetFilters() {\r\n      this.priceRange = [0, 50000]\r\n      this.selectedBrands = []\r\n      this.sortBy = 'default'\r\n      this.searchKeyword = ''\r\n      this.goods = [...this.originalGoods]\r\n      this.filteredGoods = [...this.goods]\r\n    },\r\n\r\n    navTo(url) {\r\n      location.href = url\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.main-content {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n  padding: 20px 0;\r\n}\r\n\r\n.container {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n}\r\n\r\n/* 搜索框样式 */\r\n.search-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-box {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.search-box :deep(.el-input__inner) {\r\n  height: 45px;\r\n  line-height: 45px;\r\n  padding-left: 20px;\r\n  border-radius: 25px;\r\n  font-size: 16px;\r\n  border: 2px solid #e8e8e8;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.search-box :deep(.el-input__inner):focus {\r\n  border-color: #04BF04;\r\n  box-shadow: 0 0 0 2px rgba(4, 191, 4, 0.1);\r\n}\r\n\r\n.search-box :deep(.el-input-group__append) {\r\n  background: #04BF04;\r\n  border-color: #04BF04;\r\n  color: white;\r\n  border-top-right-radius: 25px;\r\n  border-bottom-right-radius: 25px;\r\n  padding: 0 25px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.search-box :deep(.el-input-group__append):hover {\r\n  background: #2ecc71;\r\n  border-color: #2ecc71;\r\n}\r\n\r\n.search-box :deep(.el-button) {\r\n  font-size: 16px;\r\n  border: none;\r\n  background: transparent;\r\n  color: white;\r\n}\r\n\r\n/* 内容区域布局 */\r\n.content-area {\r\n  display: flex;\r\n  gap: 30px;\r\n  margin-top: 20px;\r\n}\r\n\r\n/* 筛选器侧边栏样式 */\r\n.filter-sidebar {\r\n  width: 280px;\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  height: fit-content;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.filter-section {\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.filter-section h3 {\r\n  font-size: 16px;\r\n  color: #2c3e50;\r\n  margin-bottom: 15px;\r\n  font-weight: 600;\r\n}\r\n\r\n.price-range-text {\r\n  margin-top: 10px;\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.filter-section :deep(.el-checkbox-group) {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.filter-section :deep(.el-radio-group) {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.reset-btn {\r\n  width: 100%;\r\n  margin-top: 20px;\r\n}\r\n\r\n/* 商品展示区域样式 */\r\n.goods-container {\r\n  flex: 1;\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.goods-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.goods-header h2 {\r\n  font-size: 20px;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n}\r\n\r\n.goods-count {\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.goods-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.goods-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: all 0.3s;\r\n  cursor: pointer;\r\n  border: 1px solid #eee;\r\n}\r\n\r\n.goods-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.goods-img {\r\n  position: relative;\r\n  padding-top: 100%;\r\n}\r\n\r\n.goods-img img {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.goods-info {\r\n  padding: 15px;\r\n}\r\n\r\n.goods-info h3 {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  color: #2c3e50;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.goods-desc {\r\n  margin: 8px 0;\r\n  font-size: 14px;\r\n  color: #666;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 10;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  height: 40px;\r\n}\r\n\r\n.price {\r\n  color: #ff5000;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 无数据提示样式 */\r\n.no-data {\r\n  text-align: center;\r\n  padding: 40px 0;\r\n  color: #999;\r\n}\r\n\r\n.no-data i {\r\n  font-size: 48px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.no-data p {\r\n  margin: 0;\r\n  font-size: 16px;\r\n}\r\n\r\n/* 响应式布局 */\r\n@media (max-width: 1200px) {\r\n  .content-area {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .filter-sidebar {\r\n    width: 100%;\r\n  }\r\n  \r\n  .filter-section :deep(.el-checkbox-group),\r\n  .filter-section :deep(.el-radio-group) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    gap: 15px;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .container {\r\n    padding: 0 10px;\r\n  }\r\n  \r\n  .goods-grid {\r\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n    gap: 10px;\r\n  }\r\n  \r\n  .goods-info {\r\n    padding: 10px;\r\n  }\r\n  \r\n  .goods-info h3 {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .price {\r\n    font-size: 16px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}