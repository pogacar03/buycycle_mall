{"ast":null,"code":"export default {\n  name: 'Type',\n  data() {\n    return {\n      // 表格数据\n      tableData: [],\n      loading: false,\n      // 分页\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      // 搜索\n      searchName: '',\n      // 弹窗\n      dialogTitle: '',\n      dialogFormVisible: false,\n      saveLoading: false,\n      // 表单\n      form: {\n        name: '',\n        description: ''\n      },\n      // 表单验证规则\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入分类名称',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 50,\n          message: '长度在 2 到 50 个字符',\n          trigger: 'blur'\n        }],\n        description: [{\n          max: 200,\n          message: '描述不能超过200个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    // 加载数据\n    load() {\n      this.loading = true;\n      this.$request.get('/type/page', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.searchName\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    // 搜索\n    handleSearch() {\n      this.pageNum = 1;\n      this.load();\n    },\n    // 分页\n    handleSizeChange(val) {\n      this.pageSize = val;\n      this.load();\n    },\n    handleCurrentChange(val) {\n      this.pageNum = val;\n      this.load();\n    },\n    // 新增\n    add() {\n      this.dialogTitle = '新增分类';\n      this.dialogFormVisible = true;\n      this.form = {\n        name: '',\n        description: ''\n      };\n      // 重置表单校验\n      if (this.$refs.form) {\n        this.$refs.form.resetFields();\n      }\n    },\n    // 编辑\n    edit(row) {\n      this.dialogTitle = '编辑分类';\n      this.dialogFormVisible = true;\n      this.form = JSON.parse(JSON.stringify(row));\n      // 重置表单校验\n      if (this.$refs.form) {\n        this.$refs.form.resetFields();\n      }\n    },\n    // 取消\n    cancelForm() {\n      this.dialogFormVisible = false;\n      this.form = {\n        name: '',\n        description: ''\n      };\n      if (this.$refs.form) {\n        this.$refs.form.resetFields();\n      }\n    },\n    // 保存\n    save() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.saveLoading = true;\n          this.$request.post('/type/save', this.form).then(res => {\n            if (res.code === '200') {\n              this.$message.success('保存成功');\n              this.dialogFormVisible = false;\n              this.load();\n            } else {\n              this.$message.error(res.msg);\n            }\n          }).finally(() => {\n            this.saveLoading = false;\n          });\n        }\n      });\n    },\n    // 删除\n    del(id) {\n      this.$confirm('确认删除该分类吗？删除后不可恢复！', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$request.delete('/type/delete/' + id).then(res => {\n          if (res.code === '200') {\n            this.$message.success('删除成功');\n            this.load();\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }).catch(() => {});\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","loading","pageNum","pageSize","total","searchName","dialogTitle","dialogFormVisible","saveLoading","form","description","rules","required","message","trigger","min","max","created","load","methods","$request","get","params","then","res","code","list","$message","error","msg","finally","handleSearch","handleSizeChange","val","handleCurrentChange","add","$refs","resetFields","edit","row","JSON","parse","stringify","cancelForm","save","validate","valid","post","success","del","id","$confirm","confirmButtonText","cancelButtonText","type","delete","catch"],"sources":["src/views/manager/Type.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div class=\"header-actions\">\r\n      <el-button type=\"primary\" @click=\"add\">\r\n        <i class=\"el-icon-plus\"></i> 新增分类\r\n      </el-button>\r\n      <el-input\r\n        v-model=\"searchName\"\r\n        placeholder=\"请输入分类名称搜索\"\r\n        style=\"width: 200px; margin-left: 10px\"\r\n        clearable\r\n        @keyup.enter.native=\"handleSearch\"\r\n        @clear=\"handleSearch\">\r\n        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"handleSearch\"></el-button>\r\n      </el-input>\r\n    </div>\r\n\r\n    <!-- 分类列表表格 -->\r\n    <el-table\r\n      :data=\"tableData\"\r\n      stripe\r\n      border\r\n      style=\"width: 100%; margin-top: 20px\"\r\n      v-loading=\"loading\">\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"分类名称\" min-width=\"150\">\r\n        <template v-slot=\"scope\">\r\n          <span class=\"category-name\">{{ scope.row.name }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"description\" label=\"分类描述\" min-width=\"200\">\r\n        <template v-slot=\"scope\">\r\n          <el-tooltip \r\n            v-if=\"scope.row.description\" \r\n            :content=\"scope.row.description\" \r\n            placement=\"top\">\r\n            <span class=\"description-text\">{{ scope.row.description }}</span>\r\n          </el-tooltip>\r\n          <span v-else>-</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"创建时间\" width=\"180\" align=\"center\">\r\n        <template v-slot=\"scope\">\r\n          {{ scope.row.createTime || '-' }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"200\" align=\"center\">\r\n        <template v-slot=\"scope\">\r\n          <el-button \r\n            size=\"mini\" \r\n            type=\"primary\" \r\n            plain\r\n            @click=\"edit(scope.row)\">\r\n            编辑\r\n          </el-button>\r\n          <el-button \r\n            size=\"mini\" \r\n            type=\"danger\" \r\n            plain\r\n            @click=\"del(scope.row.id)\">\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页器 -->\r\n    <div class=\"pagination-container\">\r\n      <el-pagination\r\n        background\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"pageNum\"\r\n        :page-sizes=\"[10, 20, 50]\"\r\n        :page-size=\"pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n\r\n    <!-- 新增/编辑弹窗 -->\r\n    <el-dialog \r\n      :title=\"dialogTitle\" \r\n      :visible.sync=\"dialogFormVisible\" \r\n      width=\"500px\"\r\n      :close-on-click-modal=\"false\">\r\n      <el-form \r\n        :model=\"form\" \r\n        :rules=\"rules\"\r\n        ref=\"form\"\r\n        label-width=\"100px\"\r\n        status-icon>\r\n        <el-form-item label=\"分类名称\" prop=\"name\">\r\n          <el-input \r\n            v-model=\"form.name\" \r\n            placeholder=\"请输入分类名称\"\r\n            maxlength=\"50\"\r\n            show-word-limit>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"分类描述\" prop=\"description\">\r\n          <el-input \r\n            v-model=\"form.description\" \r\n            type=\"textarea\"\r\n            :rows=\"4\"\r\n            placeholder=\"请输入分类描述\"\r\n            maxlength=\"200\"\r\n            show-word-limit>\r\n          </el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"cancelForm\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\" :loading=\"saveLoading\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Type',\r\n  data() {\r\n    return {\r\n      // 表格数据\r\n      tableData: [],\r\n      loading: false,\r\n      // 分页\r\n      pageNum: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      // 搜索\r\n      searchName: '',\r\n      // 弹窗\r\n      dialogTitle: '',\r\n      dialogFormVisible: false,\r\n      saveLoading: false,\r\n      // 表单\r\n      form: {\r\n        name: '',\r\n        description: ''\r\n      },\r\n      // 表单验证规则\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\r\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\r\n        ],\r\n        description: [\r\n          { max: 200, message: '描述不能超过200个字符', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.load()\r\n  },\r\n  methods: {\r\n    // 加载数据\r\n    load() {\r\n      this.loading = true\r\n      this.$request.get('/type/page', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.searchName\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.tableData = res.data.list\r\n          this.total = res.data.total\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      }).finally(() => {\r\n        this.loading = false\r\n      })\r\n    },\r\n    // 搜索\r\n    handleSearch() {\r\n      this.pageNum = 1\r\n      this.load()\r\n    },\r\n    // 分页\r\n    handleSizeChange(val) {\r\n      this.pageSize = val\r\n      this.load()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.pageNum = val\r\n      this.load()\r\n    },\r\n    // 新增\r\n    add() {\r\n      this.dialogTitle = '新增分类'\r\n      this.dialogFormVisible = true\r\n      this.form = {\r\n        name: '',\r\n        description: ''\r\n      }\r\n      // 重置表单校验\r\n      if (this.$refs.form) {\r\n        this.$refs.form.resetFields()\r\n      }\r\n    },\r\n    // 编辑\r\n    edit(row) {\r\n      this.dialogTitle = '编辑分类'\r\n      this.dialogFormVisible = true\r\n      this.form = JSON.parse(JSON.stringify(row))\r\n      // 重置表单校验\r\n      if (this.$refs.form) {\r\n        this.$refs.form.resetFields()\r\n      }\r\n    },\r\n    // 取消\r\n    cancelForm() {\r\n      this.dialogFormVisible = false\r\n      this.form = {\r\n        name: '',\r\n        description: ''\r\n      }\r\n      if (this.$refs.form) {\r\n        this.$refs.form.resetFields()\r\n      }\r\n    },\r\n    // 保存\r\n    save() {\r\n      this.$refs.form.validate((valid) => {\r\n        if (valid) {\r\n          this.saveLoading = true\r\n          this.$request.post('/type/save', this.form).then(res => {\r\n            if (res.code === '200') {\r\n              this.$message.success('保存成功')\r\n              this.dialogFormVisible = false\r\n              this.load()\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          }).finally(() => {\r\n            this.saveLoading = false\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 删除\r\n    del(id) {\r\n      this.$confirm('确认删除该分类吗？删除后不可恢复！', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$request.delete('/type/delete/' + id).then(res => {\r\n          if (res.code === '200') {\r\n            this.$message.success('删除成功')\r\n            this.load()\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      }).catch(() => {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.app-container {\r\n  padding: 20px;\r\n}\r\n\r\n.header-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.category-name {\r\n  font-weight: 500;\r\n}\r\n\r\n.description-text {\r\n  display: inline-block;\r\n  max-width: 300px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n/* Element UI 样式覆盖 */\r\n:deep(.el-table) {\r\n  margin-top: 20px;\r\n}\r\n\r\n:deep(.el-dialog__body) {\r\n  padding: 20px 40px !important;\r\n}\r\n\r\n:deep(.el-form-item__content) {\r\n  width: calc(100% - 100px);\r\n}\r\n</style>"],"mappings":"AAwHA;EACAA,IAAA;EACAC,KAAA;IACA;MACA;MACAC,SAAA;MACAC,OAAA;MACA;MACAC,OAAA;MACAC,QAAA;MACAC,KAAA;MACA;MACAC,UAAA;MACA;MACAC,WAAA;MACAC,iBAAA;MACAC,WAAA;MACA;MACAC,IAAA;QACAX,IAAA;QACAY,WAAA;MACA;MACA;MACAC,KAAA;QACAb,IAAA,GACA;UAAAc,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,WAAA,GACA;UAAAM,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACA;IACAD,KAAA;MACA,KAAAjB,OAAA;MACA,KAAAmB,QAAA,CAAAC,GAAA;QACAC,MAAA;UACApB,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAL,IAAA,OAAAO;QACA;MACA,GAAAkB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAzB,SAAA,GAAAwB,GAAA,CAAAzB,IAAA,CAAA2B,IAAA;UACA,KAAAtB,KAAA,GAAAoB,GAAA,CAAAzB,IAAA,CAAAK,KAAA;QACA;UACA,KAAAuB,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA,GAAAC,OAAA;QACA,KAAA7B,OAAA;MACA;IACA;IACA;IACA8B,aAAA;MACA,KAAA7B,OAAA;MACA,KAAAgB,IAAA;IACA;IACA;IACAc,iBAAAC,GAAA;MACA,KAAA9B,QAAA,GAAA8B,GAAA;MACA,KAAAf,IAAA;IACA;IACAgB,oBAAAD,GAAA;MACA,KAAA/B,OAAA,GAAA+B,GAAA;MACA,KAAAf,IAAA;IACA;IACA;IACAiB,IAAA;MACA,KAAA7B,WAAA;MACA,KAAAC,iBAAA;MACA,KAAAE,IAAA;QACAX,IAAA;QACAY,WAAA;MACA;MACA;MACA,SAAA0B,KAAA,CAAA3B,IAAA;QACA,KAAA2B,KAAA,CAAA3B,IAAA,CAAA4B,WAAA;MACA;IACA;IACA;IACAC,KAAAC,GAAA;MACA,KAAAjC,WAAA;MACA,KAAAC,iBAAA;MACA,KAAAE,IAAA,GAAA+B,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,CAAAH,GAAA;MACA;MACA,SAAAH,KAAA,CAAA3B,IAAA;QACA,KAAA2B,KAAA,CAAA3B,IAAA,CAAA4B,WAAA;MACA;IACA;IACA;IACAM,WAAA;MACA,KAAApC,iBAAA;MACA,KAAAE,IAAA;QACAX,IAAA;QACAY,WAAA;MACA;MACA,SAAA0B,KAAA,CAAA3B,IAAA;QACA,KAAA2B,KAAA,CAAA3B,IAAA,CAAA4B,WAAA;MACA;IACA;IACA;IACAO,KAAA;MACA,KAAAR,KAAA,CAAA3B,IAAA,CAAAoC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAtC,WAAA;UACA,KAAAY,QAAA,CAAA2B,IAAA,oBAAAtC,IAAA,EAAAc,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAE,QAAA,CAAAqB,OAAA;cACA,KAAAzC,iBAAA;cACA,KAAAW,IAAA;YACA;cACA,KAAAS,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;YACA;UACA,GAAAC,OAAA;YACA,KAAAtB,WAAA;UACA;QACA;MACA;IACA;IACA;IACAyC,IAAAC,EAAA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAA/B,IAAA;QACA,KAAAH,QAAA,CAAAmC,MAAA,mBAAAL,EAAA,EAAA3B,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACA,KAAAE,QAAA,CAAAqB,OAAA;YACA,KAAA9B,IAAA;UACA;YACA,KAAAS,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAA2B,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}