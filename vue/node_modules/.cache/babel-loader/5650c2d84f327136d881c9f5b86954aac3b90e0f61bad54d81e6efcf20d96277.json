{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nexport default {\n  data() {\n    return {\n      orderId: this.$route.query.orderId,\n      goods: {},\n      returnForm: {\n        type: \"1\",\n        reason: \"\",\n        description: \"\",\n        images: []\n      },\n      rules: {\n        type: [{\n          required: true,\n          message: \"请选择退换类型\"\n        }],\n        reason: [{\n          required: true,\n          message: \"请选择退换原因\"\n        }],\n        description: [{\n          required: true,\n          message: \"请填写问题描述\"\n        }, {\n          min: 10,\n          message: \"描述至少10个字符\"\n        }]\n      }\n    };\n  },\n  created() {\n    this.loadOrderDetail();\n  },\n  methods: {\n    loadOrderDetail() {\n      this.$request.get(\"/orders/detail/\" + this.orderId).then(res => {\n        if (res.code === \"200\") {\n          this.goods = res.data;\n        }\n      });\n    },\n    handleUploadSuccess(res) {\n      if (res.code === \"200\") {\n        this.returnForm.images.push(res.data);\n      }\n    },\n    beforeUpload(file) {\n      const isImage = file.type.startsWith(\"image/\");\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImage) {\n        this.$message.error(\"只能上传图片文件！\");\n        return false;\n      }\n      if (!isLt2M) {\n        this.$message.error(\"图片大小不能超过 2MB！\");\n        return false;\n      }\n      if (this.returnForm.images.length >= 3) {\n        this.$message.error(\"最多只能上传3张图片！\");\n        return false;\n      }\n      return true;\n    },\n    submitForm() {\n      this.$refs.returnForm.validate(valid => {\n        if (valid) {\n          const formData = new FormData();\n          formData.append('orderId', this.orderId);\n          formData.append('goodsId', this.goods.id);\n          formData.append('goodsName', this.goods.name);\n          formData.append('type', this.returnForm.type);\n          formData.append('reason', this.returnForm.reason);\n          formData.append('description', this.returnForm.description);\n          if (this.returnForm.type === '1') {\n            // 如果是退货退款，添加退款金额\n            formData.append('amount', this.goods.price);\n          }\n\n          // 添加图片\n          if (this.returnForm.images && this.returnForm.images.length > 0) {\n            this.returnForm.images.forEach((image, index) => {\n              formData.append('images', image);\n            });\n          }\n          this.$request.post('/return/apply', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }).then(res => {\n            if (res.code === '200') {\n              this.$message.success('申请提交成功');\n              this.$router.push('/front/orders');\n            } else {\n              this.$message.error(res.msg || '提交失败');\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","orderId","$route","query","goods","returnForm","type","reason","description","images","rules","required","message","min","created","loadOrderDetail","methods","$request","get","then","res","code","handleUploadSuccess","push","beforeUpload","file","isImage","startsWith","isLt2M","size","$message","error","length","submitForm","$refs","validate","valid","formData","FormData","append","id","name","price","forEach","image","index","post","headers","success","$router","msg"],"sources":["src/views/front/ReturnApply.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-content\">\r\n    <div\r\n      style=\"\r\n        width: 70%;\r\n        background-color: white;\r\n        margin: 30px auto;\r\n        border-radius: 20px;\r\n        padding: 20px;\r\n      \"\r\n    >\r\n      <div class=\"return-header\">\r\n        <div class=\"title\">申请退换货</div>\r\n        <div class=\"order-info\">\r\n          <span>订单号：{{ orderId }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 商品信息 -->\r\n      <div class=\"goods-info\">\r\n        <img :src=\"goods.img\" :alt=\"goods.name\" />\r\n        <div class=\"goods-detail\">\r\n          <div class=\"goods-name\">{{ goods.name }}</div>\r\n          <div class=\"goods-price\">￥{{ goods.price }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 退货表单 -->\r\n      <el-form\r\n        :model=\"returnForm\"\r\n        :rules=\"rules\"\r\n        ref=\"returnForm\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"退换类型\" prop=\"type\">\r\n          <el-radio-group v-model=\"returnForm.type\">\r\n            <el-radio label=\"1\">退货退款</el-radio>\r\n            <el-radio label=\"2\">换货</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"退换原因\" prop=\"reason\">\r\n          <el-select\r\n            v-model=\"returnForm.reason\"\r\n            placeholder=\"请选择退换原因\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <el-option label=\"商品质量问题\" value=\"1\"></el-option>\r\n            <el-option label=\"商品损坏\" value=\"2\"></el-option>\r\n            <el-option label=\"商品与描述不符\" value=\"3\"></el-option>\r\n            <el-option label=\"尺寸不合适\" value=\"4\"></el-option>\r\n            <el-option label=\"其他原因\" value=\"5\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"问题描述\" prop=\"description\">\r\n          <el-input\r\n            type=\"textarea\"\r\n            v-model=\"returnForm.description\"\r\n            :rows=\"4\"\r\n            placeholder=\"请详细描述商品问题...\"\r\n          ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"上传凭证\">\r\n          <el-upload\r\n            action=\"/api/upload\"\r\n            list-type=\"picture-card\"\r\n            :on-success=\"handleUploadSuccess\"\r\n            :before-upload=\"beforeUpload\"\r\n          >\r\n            <i class=\"el-icon-plus\"></i>\r\n          </el-upload>\r\n          <div class=\"upload-tip\">最多上传3张图片，每张不超过2M</div>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\">提交申请</el-button>\r\n          <el-button @click=\"$router.go(-1)\">返回</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      orderId: this.$route.query.orderId,\r\n      goods: {},\r\n      returnForm: {\r\n        type: \"1\",\r\n        reason: \"\",\r\n        description: \"\",\r\n        images: [],\r\n      },\r\n      rules: {\r\n        type: [{ required: true, message: \"请选择退换类型\" }],\r\n        reason: [{ required: true, message: \"请选择退换原因\" }],\r\n        description: [\r\n          { required: true, message: \"请填写问题描述\" },\r\n          { min: 10, message: \"描述至少10个字符\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.loadOrderDetail();\r\n  },\r\n  methods: {\r\n    loadOrderDetail() {\r\n      this.$request.get(\"/orders/detail/\" + this.orderId).then((res) => {\r\n        if (res.code === \"200\") {\r\n          this.goods = res.data;\r\n        }\r\n      });\r\n    },\r\n    handleUploadSuccess(res) {\r\n      if (res.code === \"200\") {\r\n        this.returnForm.images.push(res.data);\r\n      }\r\n    },\r\n    beforeUpload(file) {\r\n      const isImage = file.type.startsWith(\"image/\");\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n      if (!isImage) {\r\n        this.$message.error(\"只能上传图片文件！\");\r\n        return false;\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error(\"图片大小不能超过 2MB！\");\r\n        return false;\r\n      }\r\n      if (this.returnForm.images.length >= 3) {\r\n        this.$message.error(\"最多只能上传3张图片！\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    submitForm() {\r\n  this.$refs.returnForm.validate((valid) => {\r\n    if (valid) {\r\n      const formData = new FormData();\r\n      formData.append('orderId', this.orderId);\r\n      formData.append('goodsId', this.goods.id);\r\n      formData.append('goodsName', this.goods.name);\r\n      formData.append('type', this.returnForm.type);\r\n      formData.append('reason', this.returnForm.reason);\r\n      formData.append('description', this.returnForm.description);\r\n      \r\n      if (this.returnForm.type === '1') {  // 如果是退货退款，添加退款金额\r\n        formData.append('amount', this.goods.price);\r\n      }\r\n\r\n      // 添加图片\r\n      if (this.returnForm.images && this.returnForm.images.length > 0) {\r\n        this.returnForm.images.forEach((image, index) => {\r\n          formData.append('images', image);\r\n        });\r\n      }\r\n\r\n      this.$request.post('/return/apply', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success('申请提交成功');\r\n          this.$router.push('/front/orders');\r\n        } else {\r\n          this.$message.error(res.msg || '提交失败');\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.return-header {\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.title {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.order-info {\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.goods-info {\r\n  display: flex;\r\n  padding: 15px;\r\n  background: #f8f8f8;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.goods-info img {\r\n  width: 80px;\r\n  height: 80px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n}\r\n\r\n.goods-detail {\r\n  margin-left: 15px;\r\n}\r\n\r\n.goods-name {\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.goods-price {\r\n  color: #ff5000;\r\n  font-weight: bold;\r\n}\r\n\r\n.upload-tip {\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-top: 5px;\r\n}\r\n</style>"],"mappings":";;;AAsFA;EACAA,KAAA;IACA;MACAC,OAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,OAAA;MACAG,KAAA;MACAC,UAAA;QACAC,IAAA;QACAC,MAAA;QACAC,WAAA;QACAC,MAAA;MACA;MACAC,KAAA;QACAJ,IAAA;UAAAK,QAAA;UAAAC,OAAA;QAAA;QACAL,MAAA;UAAAI,QAAA;UAAAC,OAAA;QAAA;QACAJ,WAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAD,OAAA;QAAA;MAEA;IACA;EACA;EACAE,QAAA;IACA,KAAAC,eAAA;EACA;EACAC,OAAA;IACAD,gBAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,0BAAAjB,OAAA,EAAAkB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAjB,KAAA,GAAAgB,GAAA,CAAApB,IAAA;QACA;MACA;IACA;IACAsB,oBAAAF,GAAA;MACA,IAAAA,GAAA,CAAAC,IAAA;QACA,KAAAhB,UAAA,CAAAI,MAAA,CAAAc,IAAA,CAAAH,GAAA,CAAApB,IAAA;MACA;IACA;IACAwB,aAAAC,IAAA;MACA,MAAAC,OAAA,GAAAD,IAAA,CAAAnB,IAAA,CAAAqB,UAAA;MACA,MAAAC,MAAA,GAAAH,IAAA,CAAAI,IAAA;MAEA,KAAAH,OAAA;QACA,KAAAI,QAAA,CAAAC,KAAA;QACA;MACA;MACA,KAAAH,MAAA;QACA,KAAAE,QAAA,CAAAC,KAAA;QACA;MACA;MACA,SAAA1B,UAAA,CAAAI,MAAA,CAAAuB,MAAA;QACA,KAAAF,QAAA,CAAAC,KAAA;QACA;MACA;MACA;IACA;IACAE,WAAA;MACA,KAAAC,KAAA,CAAA7B,UAAA,CAAA8B,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,MAAAC,QAAA,OAAAC,QAAA;UACAD,QAAA,CAAAE,MAAA,iBAAAtC,OAAA;UACAoC,QAAA,CAAAE,MAAA,iBAAAnC,KAAA,CAAAoC,EAAA;UACAH,QAAA,CAAAE,MAAA,mBAAAnC,KAAA,CAAAqC,IAAA;UACAJ,QAAA,CAAAE,MAAA,cAAAlC,UAAA,CAAAC,IAAA;UACA+B,QAAA,CAAAE,MAAA,gBAAAlC,UAAA,CAAAE,MAAA;UACA8B,QAAA,CAAAE,MAAA,qBAAAlC,UAAA,CAAAG,WAAA;UAEA,SAAAH,UAAA,CAAAC,IAAA;YAAA;YACA+B,QAAA,CAAAE,MAAA,gBAAAnC,KAAA,CAAAsC,KAAA;UACA;;UAEA;UACA,SAAArC,UAAA,CAAAI,MAAA,SAAAJ,UAAA,CAAAI,MAAA,CAAAuB,MAAA;YACA,KAAA3B,UAAA,CAAAI,MAAA,CAAAkC,OAAA,EAAAC,KAAA,EAAAC,KAAA;cACAR,QAAA,CAAAE,MAAA,WAAAK,KAAA;YACA;UACA;UAEA,KAAA3B,QAAA,CAAA6B,IAAA,kBAAAT,QAAA;YACAU,OAAA;cACA;YACA;UACA,GAAA5B,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAS,QAAA,CAAAkB,OAAA;cACA,KAAAC,OAAA,CAAA1B,IAAA;YACA;cACA,KAAAO,QAAA,CAAAC,KAAA,CAAAX,GAAA,CAAA8B,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}