{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"FrontLayout\",\n  data() {\n    return {\n      top: '',\n      notice: [],\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      showAIDialog: false,\n      question: '',\n      chatHistory: [],\n      loading: false\n    };\n  },\n  mounted() {\n    this.loadNotice();\n  },\n  methods: {\n    // ... 保持原有的其他方法不变 ...\n\n    askAI() {\n      if (this.question.trim() === '') {\n        this.$message.warning('请输入问题');\n        return;\n      }\n\n      // 添加用户问题到聊天记录\n      this.chatHistory.push({\n        type: 'user',\n        content: this.question\n      });\n      this.loading = true;\n\n      // 发送请求\n      this.$request.post('/ai/ask', {\n        question: this.question\n      }).then(res => {\n        if (res.code === 200) {\n          // 添加AI回答到聊天记录\n          this.chatHistory.push({\n            type: 'ai',\n            content: res.answer\n          });\n        } else {\n          this.$message.error(res.msg || '请求失败');\n        }\n      }).catch(error => {\n        console.error('AI请求失败:', error);\n        this.$message.error('网络错误，请稍后再试');\n      }).finally(() => {\n        this.loading = false;\n        this.question = ''; // 清空输入框\n        this.$nextTick(() => {\n          // 滚动到底部\n          const container = this.$refs.chatContainer;\n          if (container) {\n            container.scrollTop = container.scrollHeight;\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","top","notice","user","JSON","parse","localStorage","getItem","showAIDialog","question","chatHistory","loading","mounted","loadNotice","methods","askAI","trim","$message","warning","push","type","content","$request","post","then","res","code","answer","error","msg","catch","console","finally","$nextTick","container","$refs","chatContainer","scrollTop","scrollHeight"],"sources":["src/views/Front.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    \r\n\r\n    <!-- AI 客服按钮 -->\r\n    <el-button \r\n      type=\"primary\" \r\n      @click=\"showAIDialog = true\" \r\n      class=\"ai-service-btn\">\r\n      <i class=\"el-icon-service\"></i> AI 客服\r\n    </el-button>\r\n\r\n    <!-- AI 客服对话框 -->\r\n    <el-dialog \r\n      :visible.sync=\"showAIDialog\" \r\n      title=\"AI 智能客服\" \r\n      width=\"50%\"\r\n      :close-on-click-modal=\"false\">\r\n      <div class=\"ai-chat-container\">\r\n        <!-- 聊天记录区域 -->\r\n        <div class=\"chat-messages\" ref=\"chatContainer\">\r\n          <div v-if=\"chatHistory.length === 0\" class=\"welcome-message\">\r\n            您好！我是BuyCycle的AI客服助手，请问有什么可以帮您？\r\n          </div>\r\n          <div v-for=\"(msg, index) in chatHistory\" \r\n               :key=\"index\" \r\n               :class=\"['message', msg.type]\">\r\n            <div class=\"message-content\">{{ msg.content }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 输入区域 -->\r\n        <div class=\"chat-input\">\r\n          <el-input\r\n            v-model=\"question\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"请输入您的问题\"\r\n            @keyup.enter.native.exact=\"askAI\"\r\n          ></el-input>\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"askAI\"\r\n            :loading=\"loading\"\r\n            style=\"margin-top: 10px\">\r\n            {{ loading ? '正在思考...' : '发送' }}\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!--主体-->\r\n    <div class=\"main-body\">\r\n      <router-view ref=\"child\" @update:user=\"updateUser\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"FrontLayout\",\r\n\r\n  data() {\r\n    return {\r\n      top: '',\r\n      notice: [],\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\r\n      showAIDialog: false,\r\n      question: '',\r\n      chatHistory: [],\r\n      loading: false\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.loadNotice()\r\n  },\r\n\r\n  methods: {\r\n    // ... 保持原有的其他方法不变 ...\r\n\r\n    askAI() {\r\n      if (this.question.trim() === '') {\r\n        this.$message.warning('请输入问题');\r\n        return;\r\n      }\r\n\r\n      // 添加用户问题到聊天记录\r\n      this.chatHistory.push({\r\n        type: 'user',\r\n        content: this.question\r\n      });\r\n\r\n      this.loading = true;\r\n      \r\n      // 发送请求\r\n      this.$request.post('/ai/ask', {\r\n        question: this.question\r\n      }).then(res => {\r\n        if (res.code === 200) {\r\n          // 添加AI回答到聊天记录\r\n          this.chatHistory.push({\r\n            type: 'ai',\r\n            content: res.answer\r\n          });\r\n        } else {\r\n          this.$message.error(res.msg || '请求失败');\r\n        }\r\n      }).catch(error => {\r\n        console.error('AI请求失败:', error);\r\n        this.$message.error('网络错误，请稍后再试');\r\n      }).finally(() => {\r\n        this.loading = false;\r\n        this.question = ''; // 清空输入框\r\n        this.$nextTick(() => {\r\n          // 滚动到底部\r\n          const container = this.$refs.chatContainer;\r\n          if (container) {\r\n            container.scrollTop = container.scrollHeight;\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import \"@/assets/css/front.css\";\r\n\r\n/* AI客服相关样式 */\r\n.ai-service-btn {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  z-index: 999;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  padding: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  font-size: 12px;\r\n}\r\n\r\n.ai-service-btn i {\r\n  font-size: 24px;\r\n  margin-bottom: 2px;\r\n}\r\n\r\n.ai-chat-container {\r\n  height: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-messages {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  background: #f5f7fa;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.welcome-message {\r\n  text-align: center;\r\n  color: #909399;\r\n  padding: 20px;\r\n}\r\n\r\n.message {\r\n  margin-bottom: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.message.user {\r\n  align-items: flex-end;\r\n}\r\n\r\n.message.ai {\r\n  align-items: flex-start;\r\n}\r\n\r\n.message-content {\r\n  max-width: 80%;\r\n  padding: 10px 15px;\r\n  border-radius: 4px;\r\n  word-break: break-word;\r\n}\r\n\r\n.user .message-content {\r\n  background: #409EFF;\r\n  color: white;\r\n  border-radius: 15px 15px 0 15px;\r\n}\r\n\r\n.ai .message-content {\r\n  background: white;\r\n  color: #333;\r\n  border-radius: 15px 15px 15px 0;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.chat-input {\r\n  padding: 10px 0;\r\n}\r\n</style>"],"mappings":";AA2DA;EACAA,IAAA;EAEAC,KAAA;IACA;MACAC,GAAA;MACAC,MAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,YAAA;MACAC,QAAA;MACAC,WAAA;MACAC,OAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,UAAA;EACA;EAEAC,OAAA;IACA;;IAEAC,MAAA;MACA,SAAAN,QAAA,CAAAO,IAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA;MACA;;MAEA;MACA,KAAAR,WAAA,CAAAS,IAAA;QACAC,IAAA;QACAC,OAAA,OAAAZ;MACA;MAEA,KAAAE,OAAA;;MAEA;MACA,KAAAW,QAAA,CAAAC,IAAA;QACAd,QAAA,OAAAA;MACA,GAAAe,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA;UACA,KAAAhB,WAAA,CAAAS,IAAA;YACAC,IAAA;YACAC,OAAA,EAAAI,GAAA,CAAAE;UACA;QACA;UACA,KAAAV,QAAA,CAAAW,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA,GAAAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,YAAAA,KAAA;QACA,KAAAX,QAAA,CAAAW,KAAA;MACA,GAAAI,OAAA;QACA,KAAArB,OAAA;QACA,KAAAF,QAAA;QACA,KAAAwB,SAAA;UACA;UACA,MAAAC,SAAA,QAAAC,KAAA,CAAAC,aAAA;UACA,IAAAF,SAAA;YACAA,SAAA,CAAAG,SAAA,GAAAH,SAAA,CAAAI,YAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}